name: Make Result

on:
  workflow_dispatch:     # 手動実行用
  push:
    paths:
      - 'run_tests.sh'
      - '.github/workflows/make-result.yml'

permissions:
  contents: write # for commit result.md
  
jobs:
  make-result:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build tools
        env:
          TZ: Asia/Tokyo
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
                gcc \
                pandoc \
                wkhtmltopdf \
                fonts-ipafont \
                python3 \
                fonts-ipaexfont && \
                fc-cache -fv

      - name: clean md
        run: |
          for directory in $(find . -type f -name '*.c' -exec dirname {} \; | sort -u); do
            if [ -f "$directory/result.md" ]; then
              rm -f "$directory/result.md"
            fi
            if [ -f "$directory/report.md" ]; then
              rm -f "$directory/report.md"
            fi
            touch "$directory/result.md"
            touch "$directory/report.md"
            echo "$directory/result.md"
            echo "$directory/report.md"
          done
      
      - name: Find and run tests for all .c files and output results in MD by directory
        run: |
          find . -type f -name '*.c' | sort | while read file; do
            directory=$(dirname "$file")
            echo "# $(basename "$file")" >> "$directory/result.md"

            echo "# $(basename "$file")" >> "$directory/report.md"
            echo "## code" >> "$directory/report.md"
            echo '```c' >> "$directory/report.md"
            echo "" >> "$directory/report.md"
            cat "$file" >> "$directory/report.md"
            echo "" >> "$directory/report.md"
            echo '```' >> "$directory/report.md"
            echo "## result" >> "$directory/report.md"

            touch "$directory/temp.md"
            python3 test.py "$file" >> "$directory/temp.md" || echo "Error running tests for $file" >> "$directory/temp.md"

            echo "$(cat "$directory/temp.md") " >> "$directory/result.md"
            echo "$(cat "$directory/temp.md") " >> "$directory/report.md"

            rm -f "$directory/temp.md"

            echo "" >> "$directory/result.md"
            echo "" >> "$directory/report.md"
          done
      
      - name: Generate PDF from md
        run: |
          for result in $(find . -type f -name 'result.md'); do
            directory=$(dirname "$result")
            echo "Generating PDF for $directory/result.md"
            pandoc "$directory/result.md" -o "$directory/result.pdf" --pdf-engine wkhtmltopdf -c style.css -f markdown+emoji --metadata title="$(basename "$directory") 実行結果" 
            rm -f "$directory/result.md"
            echo "Generating PDF for $directory/report.md"
          done
          for report in $(find . -type f -name 'report.md'); do
            directory=$(dirname "$report")
            echo "Generating PDF for $directory/report.md"
            pandoc "$directory/report.md" -o "$directory/report.pdf" --pdf-engine wkhtmltopdf -c style.css -f markdown+emoji --metadata title="$(basename "$directory") 実行結果"
            rm -f "$directory/report.md"
            echo "Generated PDF for $directory/report.md"
          done
          echo "All PDFs generated successfully." 

      - name: Clean README
        run: |
          for report in $(find . -type f -name 'report.pdf'); do
            directory=$(dirname "$report")
            parent_directory=$(dirname "$directory")
            if [ -f "$parent_directory/README.md" ]; then
              rm -f "$parent_directory/README.md"
            fi
          done
      
      - name: Update readme
        run: |
          for report in $(find . -type f -name 'report.pdf'); do
            directory=$(dirname "$report")
            parent_directory=$(dirname "$directory")
            if [ ! -f "$parent_directory/README.md" ]; then
              touch "$parent_directory/README.md"
              echo "# $(basename "$parent_directory")" >> "$parent_directory/README.md"
              echo "## PDF一覧" >> "$parent_directory/README.md"

              for sorted_report in $(find "$parent_directory" -type f -name 'report.pdf' | sort); do
                echo "found report: $sorted_report"
                echo "- [$(basename $(dirname "$sorted_report"))]($(basename $(dirname "$sorted_report"))/$(basename "$sorted_report"))" >> "$parent_directory/README.md"
              done
            fi
          done
          
      - name: Commit generated md files
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Update test result md and pdf via workflow" || echo "No changes to commit"
          git push origin main
