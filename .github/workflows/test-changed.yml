name: Test Changed C Files and Related Tests

on:
  push:
    paths:
      - '**/*.c'
      - '**/test/**/*.txt'
      - 'run_tests.sh'
  pull_request:
    paths:
      - '**/*.c'
      - '**/test/**/*.txt'
      - 'run_tests.sh'

jobs:
  test-changed:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential python3

      - name: Get changed files and map to .c files
        id: getfiles
        run: |
          echo "TARGET_FILES=" >> $GITHUB_ENV
          rm -f changed_c_files.txt
          touch changed_c_files.txt
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | while read file; do
            if [[ "$file" == *.c ]]; then
              echo "対象Cファイル: $file"
              echo "$file" >> changed_c_files.txt
            elif [[ "$file" == */test/*input*.txt || "$file" == */test/*output*.txt ]]; then
              # e.g., file = 0410/test/foo/input1.txt -> related_c = 0410/foo.c
              dir=$(dirname "$file")
              base=$(basename "$dir")     # e.g., foo
              parent=$(dirname "$dir")    # e.g., 0410
              related_c="$parent/${base}.c"
              if [ -f "$related_c" ]; then
                echo "テストファイル変更からの関連Cファイル: $related_c"
                echo "$related_c" >> changed_c_files.txt
              fi
            fi
          done

          sort -u changed_c_files.txt > unique_c_files.txt || true
          echo "TARGET_FILES=$(paste -sd ' ' unique_c_files.txt)" >> $GITHUB_ENV

      - name: Run tests
        run: |
          for file in $TARGET_FILES; do
            echo "🧪 Testing $file ..."
            python3 test.py"$file"
          done
